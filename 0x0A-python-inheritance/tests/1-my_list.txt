# Import the MyList class from the module '1-my_list'
MyList = __import__('1-my_list').MyList

# Check if the module docstring is not empty
doc = __import__("1-my_list").__doc__
assert len(doc) > 0

# Check if the class docstring is not empty
doc = MyList.__doc__
assert len(doc) > 0

# Check if the method docstring is not empty
doc = MyList.print_sorted.__doc__
assert len(doc) > 0

# Test cases for MyList class with various input lists
my_list = MyList([1, 2, 3])
assert my_list.print_sorted() == [1, 2, 3]

my_list = MyList([3, 2, 1])
assert my_list.print_sorted() == [1, 2, 3]

my_list = MyList([1])
assert my_list.print_sorted() == [1]

my_list = MyList([1, 0])
assert my_list.print_sorted() == [0, 1]

my_list = MyList([0, -1, 1])
assert my_list.print_sorted() == [-1, 0, 1]

my_list = MyList([-10, -8, -3, -2])
assert my_list.print_sorted() == [-10, -8, -3, -2]

my_list = MyList([-8, -2, -10, -3])
assert my_list.print_sorted() == [-10, -8, -3, -2]

my_list = MyList([-10, -8, -3, -2])
assert my_list.print_sorted() == [-10, -8, -3, -2]

my_list = MyList([-7, -5, 0, 1, 3, 8])
assert my_list.print_sorted() == [-7, -5, 0, 1, 3, 8]

my_list = MyList([8, 3, 1, 0, -5, -7])
assert my_list.print_sorted() == [-7, -5, 0, 1, 3, 8]

my_list = MyList([-5, 1, 8, -7, 0, 3])
assert my_list.print_sorted() == [-7, -5, 0, 1, 3, 8]

# Test cases for empty and single-element lists
my_list = MyList()
assert my_list.print_sorted() == []

my_list = MyList([])
assert my_list.print_sorted() == []

my_list = MyList([0])
assert my_list.print_sorted() == [0]

# Test with large integers
my_list = MyList([3000000000, 3001000000, 2000000000])
assert my_list.print_sorted() == [2000000000, 3000000000, 3001000000]

# Test with a long list of integers
my_list = MyList([-10, 5, -3, 8, -2, 0, 4, -7, 1, -9, 6, -4, 2, -6, 9, -1, 7, -8, 3, -5])
assert my_list.print_sorted() == [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

print("All tests passed!")
