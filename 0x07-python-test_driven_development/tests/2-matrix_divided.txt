==================================
Matrix Divided Function Test Cases
==================================

# Check if the docstring is not empty
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> docstring = __import__('2-matrix_divided').__doc__
>>> len(docstring) > 0
True

# Check if the function's docstring is not empty
>>> docstring = __import__('2-matrix_divided').matrix_divided.__doc__
>>> len(docstring) > 0
True

# Test dividing a matrix by 3
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Ensure the original matrix remains unchanged
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

# Test dividing a non-list
>>> print(matrix_divided("not a list", 5))
Traceback (most recent call last):
...

# Test dividing a matrix with a non-list element
>>> print(matrix_divided([[1, 2, 3], 'hello'], 3))
Traceback (most recent call last):
...

# Test dividing a matrix with a tuple element
>>> print(matrix_divided([[1, 2, 3], (4, 5, 6)], 3))
Traceback (most recent call last):
...

# Test dividing a matrix with tuple rows
>>> print(matrix_divided(([1, 2, 3], [4, 5, 6]), 3))
Traceback (most recent call last):
...

# Test dividing a matrix of floats
>>> print(matrix_divided([[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]], 3))
[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

# Test dividing a matrix of mixed integers and floats
>>> print(matrix_divided([[1.1, -2.2, 3], [4, 5.5, -6]], 3))
[[0.37, -0.73, 1.0], [1.33, 1.83, -2.0]]

# Test dividing a matrix with rows of different lengths
>>> print(matrix_divided([[1, 2, 3], [4, 5]], 3))
Traceback (most recent call last):
...

# Test dividing a matrix by zero
>>> print(matrix_divided([[1, 2, 3], [1, 2, 3]], 0))
Traceback (most recent call last):
...

# Test dividing a matrix by a non-numeric value
>>> print(matrix_divided([[1, 2, 3], [1, 2, 3]], "hello"))
Traceback (most recent call last):
...

# Test dividing a matrix by None
>>> print(matrix_divided([[1, 2, 3], [1, 2, 3]], None))
Traceback (most recent call last):
...

# Test dividing an invalid matrix (nested list not properly formatted)
>>> print(matrix_divided([[[1, 2], 3], [4, 5]], 6))
Traceback (most recent call last):
...

# Test dividing an empty matrix
>>> print(matrix_divided([], 5))
Traceback (most recent call last):
...

# Test dividing a matrix with an empty row
>>> print(matrix_divided([[]], 5))
[[]]

# Test dividing None
>>> print(matrix_divided(None, 5))
Traceback (most recent call last):
...

# Test dividing a non-list
>>> print(matrix_divided([1, 2, 3], 5))
Traceback (most recent call last):
...

# Test calling the function with no arguments
>>> matrix_divided()
Traceback (most recent call last):
...
